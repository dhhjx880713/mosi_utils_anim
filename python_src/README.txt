Morphable Graphs implementation

Python Dependencies:
 - Python 2.7.6.4 64 bit - WinPython is recommended, which already includes most of the other dependencies:  http://sourceforge.net/projects/winpython/files/WinPython_2.7/2.7.6.4/
 - NumPy 1.8.1
 - SciPy 0.15.1
 - scikit-learn 0.14.1
 - cgkit 2.0.0
 - rpy2 2.4.4 (requires R 3.0 or higher)
 - GPy 0.6.1 - can be found in the Dependencies directory
 - fk3.py + BOOST_PYTHON-VC110-MT-1_55.DLL  (C++ implementation of analytic forward kinematics + jacobian by LMS) - can be found in the Dependencies directory

R-Dependencies
 - R3.1.2 (http://cran.r-project.org/bin/windows/base/)
 - fda 

Developers:
Han Du*, Markus Mauer°, Erik Herrmann*, Martin Manns°, Fabian Rupp°
°Daimler AG 
*DFKI GmbH

Instructions:

1. Download data necessary to run the algorithm which can be found on redmine:
https://redmine.viscenter.de/projects/motiongraph/files 
Required: 
 - motion_primitives_quaternion_PCA95.zip contains the motion model data. Copy it to any location.
Optionally: 
 - BestFitPipeline.zip contains the binary files of imk and DFKI LT necessary for CNL processing. Extract the contents to any location.
 - Animation Server.7z contains the animation server. Extract the contents to any location.

2. Modify the configuration files.
For the morphable graphs algorithm modify "config/service.json" 
In the field "model_data" specify the location of the motion model file without file ending 
In the field "transition_data" point to an empty directory. (Transition models 
are not necessary to run the algorithm and are currently experimental.)
In the field "input_dir" specify an input directory.
In the field "output_dir" specifiy an output directory.

Optionally: Please see the readme file of the BestFitPipeline for details on its configuration file. 
Make sure input directory and output directory match.


3. Run the algorithm
You can run the algorithm with or without using the BestFitPipeline.
In order to run it as part of the BestFitPipeline, please see the readme file of the BestFitPipeline.

There are two interfaces to run the algorithm without the BestFitPipeline:
mg_command_line_interface.py - A simple command line interface without arguments.
It automatically loads the latest input file in the input directory specified in config\service.json.

mg_rest_interface.py - Starts a web server that provides the following REST interface localhost:port/run_morphablegraphs.
It can be called using a HTTP POST message with a string containing the input file as message body.

An input file is generated by the BestFitPipeline based on the CNL breakdown.
An example can be found in ..\test_data\mg_input.json and used to run
the algorithm without the pipeline.


Current limitations:
 - Only one trajectory constraint can be specified for each elementary action.

4. Motion Primitive Construction
Set the path to data folder for modelling in config\service.json, "data_folder"
Call the motion primitive modelling pipeline mg_construction_pipeline.py from command line with parameters elementary_action motion_primitive
E.g.: python mg_construction_pipeline walk rightStance
